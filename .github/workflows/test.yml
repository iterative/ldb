name: Tests

on:
  push:
  pull_request:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Set up Python 3.9
        id: python-env-setup
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
          cache: 'pip'
          cache-dependency-path: 'setup.cfg'
      - name: Install lint dependencies
        if: steps.python-env-setup.cache-hit != 'true'
        run: |
          python -m pip install --upgrade pip
          python -m pip install '.[lint]'
      - name: Run linters
        run: SKIP=no-commit-to-branch pre-commit run -a --show-diff-on-failure

  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-18.04, windows-2019, macos-10.15]
        python-version: [3.7, 3.8, 3.9]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        id: python-env-setup
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: 'setup.cfg'
      - name: Install test dependencies
        if: steps.python-env-setup.cache-hit != 'true'
        run: |
          python -m pip install --upgrade pip
          python -m pip install '.[test-setup,test]'
      - name: Download test data
        run: dvc pull
      - name: Run pytest
        run: pytest
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade build twine
      - name: Build package
        run: |
          rm -rf dist/
          python -m build --outdir=dist/
          twine check dist/*
      - name: Upload to GitHub
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        uses: softprops/action-gh-release@v1
        with:
          fail_on_unmatched_files: true
          generate_release_notes: true
          files: |
            dist/*
      - name: Upload to PyPI
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@master
        with:
          verbose: true
          verify_metadata: false
          password: ${{ secrets.PYPI_API_TOKEN }}
          packages_dir: dist/
